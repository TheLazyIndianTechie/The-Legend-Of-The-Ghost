name: Build and Release TheLegendOfTheGhost

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            executable: TheLegendOfTheGhost_Linux
          - os: windows-latest
            executable: TheLegendOfTheGhost_Windows.exe
          - os: macos-latest
            executable: TheLegendOfTheGhost_Mac

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install build-essential

    - name: Compile C++ code
      run: |
        g++ -o ${{ matrix.executable }} main.cpp
      shell: bash

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.executable }}
        path: ${{ matrix.executable }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2

      - name: Download all Artifacts
        uses: actions/download-artifact@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./TheLegendOfTheGhost_Linux
          asset_name: TheLegendOfTheGhost_Linux
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./TheLegendOfTheGhost_Windows.exe
          asset_name: TheLegendOfTheGhost_Windows.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Mac)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./TheLegendOfTheGhost_Mac
          asset_name: TheLegendOfTheGhost_Mac
          asset_content_type: application/octet-stream
